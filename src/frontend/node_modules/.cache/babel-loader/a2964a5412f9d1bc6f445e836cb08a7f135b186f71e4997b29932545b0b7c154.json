{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0141ukasz\\\\Desktop\\\\www\\\\frontend\\\\src\\\\pages\\\\Quote.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { AuthContext } from '../helpers/AuthContext';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Quote() {\n  _s();\n  let {\n    id\n  } = useParams();\n  const [quoteObject, setQuoteObject] = useState({});\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState(\"\");\n  const {\n    authState\n  } = useContext(AuthContext);\n  let navigate = useNavigate();\n  useEffect(() => {\n    axios.get(`http://localhost:3001/quotes/byId/${id}`).then(response => {\n      setQuoteObject(response.data);\n    });\n    axios.get(`http://localhost:3001/comments/${id}`).then(response => {\n      setComments(response.data);\n    });\n    // eslint-disable-next-line\n  }, []);\n  const addComment = () => {\n    axios.post(\"http://localhost:3001/comments\", {\n      commentBody: newComment,\n      QuoteId: id\n    }, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(response => {\n      if (response.data.error) {\n        alert(response.data.error);\n      } else {\n        const commentToAdd = response.data;\n        setComments([...comments, commentToAdd]);\n        setNewComment(\"\");\n      }\n    });\n  };\n  const deleteComment = id => {\n    axios.delete(`http://localhost:3001/comments/${id}`, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(() => {\n      setComments(comments.filter(comment => {\n        return comment.id !== id;\n      }));\n    });\n  };\n  if (!authState.status) {\n    navigate(\"/login\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quotePage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leftSide\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quote\",\n        id: \"individual\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: quoteObject.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"body\",\n          children: quoteObject.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"username\",\n          children: [\"Author: \", quoteObject.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"description\",\n          children: quoteObject.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rightSide\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addCommentContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Comment...\",\n          value: newComment,\n          onChange: event => {\n            setNewComment(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addComment,\n          children: \" Add Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"listOfComments\",\n        children: comments.map((comment, key) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment\",\n            children: [comment.commentBody, /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\" Username: \", comment.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), authState.username === comment.username && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                deleteComment(comment.id);\n              },\n              children: \" Delete \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 62\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(Quote, \"ng4FKxZD191AnnQOVMibwFtHQBU=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Quote;\nexport default Quote;\nvar _c;\n$RefreshReg$(_c, \"Quote\");","map":{"version":3,"names":["React","useEffect","useState","useContext","useParams","axios","AuthContext","useNavigate","jsxDEV","_jsxDEV","Quote","_s","id","quoteObject","setQuoteObject","comments","setComments","newComment","setNewComment","authState","navigate","get","then","response","data","addComment","post","commentBody","QuoteId","headers","accessToken","localStorage","getItem","error","alert","commentToAdd","deleteComment","delete","filter","comment","status","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","body","username","description","type","placeholder","value","onChange","event","target","onClick","map","key","_c","$RefreshReg$"],"sources":["C:/Users/Łukasz/Desktop/www/frontend/src/pages/Quote.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { AuthContext } from '../helpers/AuthContext';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Quote() {\r\n  let { id } = useParams();\r\n  const [quoteObject, setQuoteObject] = useState({});\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState(\"\");\r\n  const {authState} = useContext(AuthContext);\r\n  let navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:3001/quotes/byId/${id}`).then((response) => {\r\n      setQuoteObject(response.data);\r\n    });\r\n\r\n    axios.get(`http://localhost:3001/comments/${id}`).then((response) => {\r\n      setComments(response.data);\r\n    });\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const addComment = () => {\r\n    axios\r\n      .post(\"http://localhost:3001/comments\", {\r\n        commentBody: newComment,\r\n        QuoteId: id,\r\n      },\r\n      {\r\n        headers: {\r\n          accessToken: localStorage.getItem(\"accessToken\"),\r\n        }\r\n      })\r\n      .then((response) => {\r\n        if (response.data.error){\r\n          alert(response.data.error)\r\n        }\r\n        else {\r\n          const commentToAdd = response.data;\r\n          setComments([...comments, commentToAdd]);\r\n          setNewComment(\"\");\r\n        }\r\n      });\r\n  };\r\n\r\n  const deleteComment = (id) => {\r\n    axios.delete(`http://localhost:3001/comments/${id}`, {\r\n      headers: {\r\n        accessToken: localStorage.getItem(\"accessToken\"),\r\n      }\r\n    })\r\n    .then(() => {\r\n      setComments(comments.filter((comment) => {\r\n        return comment.id !== id;\r\n      }))\r\n    })\r\n  }\r\n\r\n  if(!authState.status){\r\n    navigate(\"/login\")\r\n}\r\n\r\n  return (\r\n    <div className=\"quotePage\">\r\n      <div className=\"leftSide\">\r\n        <div className=\"quote\" id=\"individual\">\r\n          <div className=\"title\">{quoteObject.title}</div>\r\n          <div className=\"body\">{quoteObject.body}</div>\r\n          <div className=\"username\">Author: {quoteObject.username}</div>\r\n          <div className=\"description\">{quoteObject.description}</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"rightSide\">\r\n        <div className=\"addCommentContainer\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Comment...\"\r\n            value={newComment}\r\n            onChange={(event) => {\r\n              setNewComment(event.target.value);\r\n            }}\r\n          />\r\n          <button onClick={addComment}> Add Comment</button>\r\n        </div>\r\n        <div className=\"listOfComments\">\r\n          {comments.map((comment, key) => {\r\n            return (\r\n              <div key={key} className=\"comment\">\r\n                {comment.commentBody}\r\n                <label> Username: {comment.username}</label>\r\n                { authState.username === comment.username && <button onClick={() => { deleteComment(comment.id) }}> Delete </button> }\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quote;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}