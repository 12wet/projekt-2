{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0141ukasz\\\\Desktop\\\\www\\\\frontend\\\\src\\\\pages\\\\Image.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { AuthContext } from '../helpers/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Image() {\n  _s();\n  let {\n    id\n  } = useParams();\n  const [imageObject, setImageObject] = useState({});\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState(\"\");\n  const {\n    authState\n  } = useContext(AuthContext);\n  useEffect(() => {\n    axios.get(`http://localhost:3001/images/byId/${id}`).then(response => {\n      setImageObject(response.data);\n    });\n    axios.get(`http://localhost:3001/comments/${id}`).then(response => {\n      setComments(response.data);\n    });\n    // eslint-disable-next-line\n  }, []);\n  const addComment = () => {\n    axios.post(\"http://localhost:3001/comments\", {\n      commentBody: newComment,\n      ImageId: id\n    }, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(response => {\n      if (response.data.error) {\n        alert(response.data.error);\n      } else {\n        const commentToAdd = {\n          commentBody: newComment,\n          username: response.data.username\n        };\n        setComments([...comments, commentToAdd]);\n        setNewComment(\"\");\n      }\n    });\n  };\n  const deleteComment = id => {\n    axios.delete(`http://localhost:3001/comments/${id}`, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(() => {\n      setComments(comments.filter(comment => {\n        return comment.id != id;\n      }));\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"imagePage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leftSide\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image\",\n        id: \"individual\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: imageObject.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"body\",\n          children: imageObject.bytecode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"username\",\n          children: [\"Author: \", imageObject.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"description\",\n          children: imageObject.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rightSide\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addCommentContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Comment...\",\n          value: newComment,\n          onChange: event => {\n            setNewComment(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addComment,\n          children: \" Add Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"listOfComments\",\n        children: comments.map((comment, key) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment\",\n            children: [comment.commentBody, /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\" Username: \", comment.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), authState.username === comment.username && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                deleteComment(comment.id);\n              },\n              children: \" Delete \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 62\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(Image, \"YkmR8GWH8CBAujHWo4kouUlh7ZA=\", false, function () {\n  return [useParams];\n});\n_c = Image;\nexport default Image;\nvar _c;\n$RefreshReg$(_c, \"Image\");","map":{"version":3,"names":["React","useEffect","useState","useContext","useParams","axios","AuthContext","jsxDEV","_jsxDEV","Image","_s","id","imageObject","setImageObject","comments","setComments","newComment","setNewComment","authState","get","then","response","data","addComment","post","commentBody","ImageId","headers","accessToken","localStorage","getItem","error","alert","commentToAdd","username","deleteComment","delete","filter","comment","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","bytecode","description","type","placeholder","value","onChange","event","target","onClick","map","key","_c","$RefreshReg$"],"sources":["C:/Users/Łukasz/Desktop/www/frontend/src/pages/Image.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { AuthContext } from '../helpers/AuthContext';\r\n\r\nfunction Image() {\r\n  let { id } = useParams();\r\n  const [imageObject, setImageObject] = useState({});\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState(\"\");\r\n  const {authState} = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:3001/images/byId/${id}`).then((response) => {\r\n      setImageObject(response.data);\r\n    });\r\n\r\n    axios.get(`http://localhost:3001/comments/${id}`).then((response) => {\r\n      setComments(response.data);\r\n    });\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const addComment = () => {\r\n    axios\r\n      .post(\"http://localhost:3001/comments\", {\r\n        commentBody: newComment,\r\n        ImageId: id,\r\n      },\r\n      {\r\n        headers: {\r\n          accessToken: localStorage.getItem(\"accessToken\"),\r\n        }\r\n      })\r\n      .then((response) => {\r\n        if (response.data.error){\r\n          alert(response.data.error)\r\n        }\r\n        else {\r\n          const commentToAdd = { commentBody: newComment, username: response.data.username };\r\n          setComments([...comments, commentToAdd]);\r\n          setNewComment(\"\");\r\n        }\r\n      });\r\n  };\r\n\r\n  const deleteComment = (id) => {\r\n    axios.delete(`http://localhost:3001/comments/${id}`, {\r\n      headers: {\r\n        accessToken: localStorage.getItem(\"accessToken\"),\r\n      }\r\n    })\r\n    .then(() => {\r\n      setComments(comments.filter((comment) => {\r\n        return comment.id != id;\r\n      }))\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"imagePage\">\r\n      <div className=\"leftSide\">\r\n        <div className=\"image\" id=\"individual\">\r\n          <div className=\"title\">{imageObject.title}</div>\r\n          <div className=\"body\">{imageObject.bytecode}</div>\r\n          <div className=\"username\">Author: {imageObject.username}</div>\r\n          <div className=\"description\">{imageObject.description}</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"rightSide\">\r\n        <div className=\"addCommentContainer\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Comment...\"\r\n            value={newComment}\r\n            onChange={(event) => {\r\n              setNewComment(event.target.value);\r\n            }}\r\n          />\r\n          <button onClick={addComment}> Add Comment</button>\r\n        </div>\r\n        <div className=\"listOfComments\">\r\n          {comments.map((comment, key) => {\r\n            return (\r\n              <div key={key} className=\"comment\">\r\n                {comment.commentBody}\r\n                <label> Username: {comment.username}</label>\r\n                { authState.username === comment.username && <button onClick={() => { deleteComment(comment.id) }}> Delete </button> }\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Image;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}