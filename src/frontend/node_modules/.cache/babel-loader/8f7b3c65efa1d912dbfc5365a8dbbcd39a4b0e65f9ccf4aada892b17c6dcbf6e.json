{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0141ukasz\\\\Desktop\\\\www\\\\frontend\\\\src\\\\pages\\\\AddImage.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from 'yup';\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AuthContext } from '../helpers/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AddImage() {\n  _s();\n  const {\n    authState\n  } = useContext(AuthContext);\n  let navigate = useNavigate();\n  const initialValues = {\n    title: \"\",\n    bytecode: {},\n    username: authState.username,\n    description: \"\"\n  };\n  const validationSchema = Yup.object().shape({\n    title: Yup.string().required(),\n    bytecode: Yup.array().min(1, \"select at least 1 file\"),\n    username: Yup.string().min(3).max(15).required(),\n    description: Yup.string().required()\n  });\n  const onSubmit = data => {\n    axios.post(\"http://localhost:3001/images\", data).then(response => {\n      console.log(\"New image submitted\");\n    });\n  };\n  if (!authState.status) {\n    navigate(\"/login\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"addImagePage\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      onSubmit: onSubmit,\n      validationSchema: validationSchema,\n      children: formik => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            className: \"formContainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Title:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"title\",\n              component: \"span\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              id: \"inputAddImage\",\n              name: \"title\",\n              placeholder: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Title:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"description\",\n              component: \"span\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              id: \"inputAddImage\",\n              name: \"description\",\n              placeholder: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Image:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              name: \"bytecode\",\n              onChange: event => {\n                formik.setFieldValue(\"bytecode\", event.target.files);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Add Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this)\n        }, void 0, false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(AddImage, \"zoi5mLZMl7fw8CNRIHX76Ea1wuM=\", false, function () {\n  return [useNavigate];\n});\n_c = AddImage;\nexport default AddImage;\nvar _c;\n$RefreshReg$(_c, \"AddImage\");","map":{"version":3,"names":["React","useContext","Formik","Form","Field","ErrorMessage","Yup","axios","useNavigate","AuthContext","jsxDEV","_jsxDEV","Fragment","_Fragment","AddImage","_s","authState","navigate","initialValues","title","bytecode","username","description","validationSchema","object","shape","string","required","array","min","max","onSubmit","data","post","then","response","console","log","status","className","children","formik","fileName","_jsxFileName","lineNumber","columnNumber","name","component","id","placeholder","type","onChange","event","setFieldValue","target","files","_c","$RefreshReg$"],"sources":["C:/Users/Łukasz/Desktop/www/frontend/src/pages/AddImage.js"],"sourcesContent":["import React, { useContext } from 'react'\r\nimport {Formik, Form, Field, ErrorMessage} from \"formik\"\r\nimport * as Yup from 'yup'\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AuthContext } from '../helpers/AuthContext';\r\n\r\nfunction AddImage() {\r\n    const {authState} = useContext(AuthContext);\r\n    let navigate = useNavigate();\r\n\r\n    const initialValues = {\r\n        title: \"\",\r\n        bytecode: {},\r\n        username: authState.username,\r\n        description: \"\"\r\n    };\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        title: Yup.string().required(),\r\n        bytecode: Yup.array().min(1,\"select at least 1 file\"),\r\n        username: Yup.string().min(3).max(15).required(),\r\n        description: Yup.string().required()\r\n\r\n    });\r\n\r\n    const onSubmit = (data) => {\r\n        axios.post(\"http://localhost:3001/images\", data).then((response) => {\r\n          console.log(\"New image submitted\");\r\n        })\r\n    }\r\n\r\n    if(!authState.status){\r\n        navigate(\"/login\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"addImagePage\">\r\n            <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>\r\n                {(formik) => {\r\n                    return(\r\n                        <>\r\n                            <Form className=\"formContainer\" >\r\n                                <label>Title:</label>\r\n                                <ErrorMessage name=\"title\" component=\"span\"/>\r\n                                <Field id=\"inputAddImage\" name=\"title\" placeholder=\"Title\"/>\r\n                                <label>Title:</label>\r\n                                <ErrorMessage name=\"description\" component=\"span\"/>\r\n                                <Field id=\"inputAddImage\" name=\"description\" placeholder=\"Description\"/>\r\n                                <label>Image:</label>\r\n                                <input type=\"file\" name=\"bytecode\" onChange={(event) => {\r\n                                    formik.setFieldValue(\"bytecode\", event.target.files);\r\n                                }}/>\r\n                                <button type=\"submit\">Add Image</button>\r\n                            </Form>\r\n                        </>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddImage"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}